#!/bin/bash

install() {
  # prepare vars
  local name="$DESKTOP_CORE_NAME"

  log::info "[$(timestamp)][desktop][$name] preparing ..."

  # get system os/arch
  local os="$DESKTOP_OS"
  local arch="$DESKTOP_OS_ARCH"
  local kernel="$DESKTOP_OS_KERNEL"
  local platform="$DESKTOP_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$DESKTOP_USER_BIN_DIR"
  local cache_dir="$DESKTOP_CACHE_DIR"
  local tmp_dir="$DESKTOP_TMP_DIR"

  #
  case $platform in
  darwin) ;;
  *)
    log::error "[$(timestamp)] unsupport platform: $platform"
    return 1
    ;;
  esac

  case $arch in
  arm64) ;;

  amd64)
    arch="x64"
    ;;
  *)
    log::error "[$(timestamp)] unsupport arch: $arch"
    return 1
    ;;
  esac

  # files
  local cache_file="$cache_dir/$DESKTOP_CORE_VERSION.dmg"
  # local source_bin_file="./$name"

  # prepare context
  log::info "[$(timestamp)][desktop][$name] context: $tmp_dir ..."
  cd $tmp_dir

  if [ -f "$cache_file" ] && [ "$(os::md5 $cache_file)" = "$DESKTOP_CORE_MD5SUM" ]; then
    log::info "[$(timestamp)][desktop][$name] found cache at $cache_file ..."
  else
    # example:
    #   https://downloads.mongodb.com/compass/mongodb-compass-1.40.2-darwin-arm64.dmg
    #   https://downloads.mongodb.com/compass/mongodb-compass-1.40.2-darwin-x64.dmg
    # generate url
    local url="${DESKTOP_CORE_RELEASE_DOWNLOAD}/compass/mongodb-compass-${DESKTOP_CORE_VERSION#v}-${platform}-${arch}.dmg"
    log::debug "[$(timestamp)][desktop][$name][$kernel][$arch] url: $url, file: ${cache_file}, tmp_dir: $tmp_dir"

    # download
    log::info "[$(timestamp)][desktop][$name] downloading from $url ..."
    os::download $cache_file $url
  fi

  # install
  log::info "[$(timestamp)][desktop][$name] installing $cache_file ..."
  install::dmg $cache_file ${name} "MongoDB Compass.app" "/Volumes/MongoDB Compass"

  # clean
  log::info "[$(timestamp)][desktop][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
